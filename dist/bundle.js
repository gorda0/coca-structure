"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var interopRequireDefault=_interopDefault(require("@babel/runtime/helpers/interopRequireDefault")),interopRequireWildcard=_interopDefault(require("@babel/runtime/helpers/interopRequireWildcard")),defineProperty=_interopDefault(require("@babel/runtime/helpers/defineProperty")),ref=_interopDefault(require("ref")),ffi=_interopDefault(require("ffi"));function unwrapExports(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function createCommonjsModule(e,r){return e(r={exports:{}},r.exports),r.exports}var nLib_1=createCommonjsModule(function(e,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=interopRequireDefault(defineProperty);interopRequireWildcard(ref);function o(r,e){var t,n=Object.keys(r);return Object.getOwnPropertySymbols&&(t=Object.getOwnPropertySymbols(r),e&&(t=t.filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})),n.push.apply(n,t)),n}function t(r){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach(function(e){(0,n.default)(r,e,t[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach(function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(t,e))})}return r}var i=interopRequireWildcard(ffi).Library("./native/target/release/libnative",{bigger_than:["bool",["int32","int32"]],smaller_than:["bool",["int32","int32"]]}),u=Object.keys(i).map(function(e){return(0,n.default)({},e.split("_").map(function(e,r){return 0===r?e:(t=e).charAt(0).toUpperCase()+t.slice(1);var t}).join(""),i[e])}).reduce(function(e,r){return t(t({},e),r)},{});r.default=u});unwrapExports(nLib_1);var mod=createCommonjsModule(function(e,r){Object.defineProperty(r,"__esModule",{value:!0}),Object.defineProperty(r,"nLib",{enumerable:!0,get:function(){return t.default}});var t=interopRequireDefault(nLib_1)}),mod$1=unwrapExports(mod);module.exports=mod$1;
